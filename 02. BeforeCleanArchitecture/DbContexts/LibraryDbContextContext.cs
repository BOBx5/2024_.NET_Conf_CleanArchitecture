// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;
using BeforeCleanArchitecture.Models;
using Microsoft.EntityFrameworkCore;

namespace BeforeCleanArchitecture.DbContexts;

public partial class LibraryDbContextContext : DbContext
{
    public LibraryDbContextContext(DbContextOptions<LibraryDbContextContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Book> Books { get; set; }

    public virtual DbSet<Rent> Rents { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Book>(entity =>
        {
            entity.Property(e => e.Id)
                .IsFixedLength()
                .HasComment("도서고유ID");
            entity.Property(e => e.Author).HasComment("도서 작가");
            entity.Property(e => e.CreatedAt).HasComment("생성일시");
            entity.Property(e => e.Description).HasComment("도서 설명");
            entity.Property(e => e.Quantity).HasComment("보유 수량");
            entity.Property(e => e.Title).HasComment("도서 제목");
            entity.Property(e => e.UpdatedAt).HasComment("수정일시");
        });

        modelBuilder.Entity<Rent>(entity =>
        {
            entity.Property(e => e.Id)
                .IsFixedLength()
                .HasComment("대여고유ID");
            entity.Property(e => e.BookId)
                .IsFixedLength()
                .HasComment("대여도서ID");
            entity.Property(e => e.BorrowedAt).HasComment("대여일시");
            entity.Property(e => e.CreatedAt).HasComment("생성일시");
            entity.Property(e => e.DueDate).HasComment("반납기한");
            entity.Property(e => e.ReturnedAt).HasComment("반납일시");
            entity.Property(e => e.UpdatedAt).HasComment("수정일시");
            entity.Property(e => e.UserId)
                .IsFixedLength()
                .HasComment("대여자ID");

            entity.HasOne(d => d.Book).WithMany(p => p.Rents)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Rent_Book");

            entity.HasOne(d => d.User).WithMany(p => p.Rents)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Rent_User");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.Property(e => e.Id)
                .IsFixedLength()
                .HasComment("유저고유ID");
            entity.Property(e => e.CreatedAt).HasComment("생성일시");
            entity.Property(e => e.Email).HasComment("이메일");
            entity.Property(e => e.Name).HasComment("성명");
            entity.Property(e => e.Status).HasComment("상태 (0: 가입대기, 1: 활동, 2: 정지)");
            entity.Property(e => e.UpdatedAt).HasComment("수정일시");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}